//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankingTryIt.BankingServiceProxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BankingServiceProxy.IBankingService")]
    public interface IBankingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankingService/Registration", ReplyAction="http://tempuri.org/IBankingService/RegistrationResponse")]
        string[] Registration(string FirstName, string LastName, string Email, string Password, string Amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankingService/Registration", ReplyAction="http://tempuri.org/IBankingService/RegistrationResponse")]
        System.Threading.Tasks.Task<string[]> RegistrationAsync(string FirstName, string LastName, string Email, string Password, string Amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankingService/LoginVerification", ReplyAction="http://tempuri.org/IBankingService/LoginVerificationResponse")]
        bool LoginVerification(string uname, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankingService/LoginVerification", ReplyAction="http://tempuri.org/IBankingService/LoginVerificationResponse")]
        System.Threading.Tasks.Task<bool> LoginVerificationAsync(string uname, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankingService/processTransaction", ReplyAction="http://tempuri.org/IBankingService/processTransactionResponse")]
        string processTransaction(string UserName, string CardNumber, string CVV, string ExpMonth, string ExpYear, string Amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankingService/processTransaction", ReplyAction="http://tempuri.org/IBankingService/processTransactionResponse")]
        System.Threading.Tasks.Task<string> processTransactionAsync(string UserName, string CardNumber, string CVV, string ExpMonth, string ExpYear, string Amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankingService/getTransactionHistory", ReplyAction="http://tempuri.org/IBankingService/getTransactionHistoryResponse")]
        string[] getTransactionHistory(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankingService/getTransactionHistory", ReplyAction="http://tempuri.org/IBankingService/getTransactionHistoryResponse")]
        System.Threading.Tasks.Task<string[]> getTransactionHistoryAsync(string UserName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBankingServiceChannel : BankingTryIt.BankingServiceProxy.IBankingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BankingServiceClient : System.ServiceModel.ClientBase<BankingTryIt.BankingServiceProxy.IBankingService>, BankingTryIt.BankingServiceProxy.IBankingService {
        
        public BankingServiceClient() {
        }
        
        public BankingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BankingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BankingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BankingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] Registration(string FirstName, string LastName, string Email, string Password, string Amount) {
            return base.Channel.Registration(FirstName, LastName, Email, Password, Amount);
        }
        
        public System.Threading.Tasks.Task<string[]> RegistrationAsync(string FirstName, string LastName, string Email, string Password, string Amount) {
            return base.Channel.RegistrationAsync(FirstName, LastName, Email, Password, Amount);
        }
        
        public bool LoginVerification(string uname, string password) {
            return base.Channel.LoginVerification(uname, password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginVerificationAsync(string uname, string password) {
            return base.Channel.LoginVerificationAsync(uname, password);
        }
        
        public string processTransaction(string UserName, string CardNumber, string CVV, string ExpMonth, string ExpYear, string Amount) {
            return base.Channel.processTransaction(UserName, CardNumber, CVV, ExpMonth, ExpYear, Amount);
        }
        
        public System.Threading.Tasks.Task<string> processTransactionAsync(string UserName, string CardNumber, string CVV, string ExpMonth, string ExpYear, string Amount) {
            return base.Channel.processTransactionAsync(UserName, CardNumber, CVV, ExpMonth, ExpYear, Amount);
        }
        
        public string[] getTransactionHistory(string UserName) {
            return base.Channel.getTransactionHistory(UserName);
        }
        
        public System.Threading.Tasks.Task<string[]> getTransactionHistoryAsync(string UserName) {
            return base.Channel.getTransactionHistoryAsync(UserName);
        }
    }
}
